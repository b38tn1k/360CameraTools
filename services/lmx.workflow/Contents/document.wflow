<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>409.2</string>
	<key>AMApplicationVersion</key>
	<string>2.5</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/usr/bin/env python
import sys
import pickle
import os

def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        return False

def ordered_set(dups):
    ordered_set = []
    added = []
    for val in dups:
        if not val in added:
            ordered_set.append(val)
        added.append(val)
    return ordered_set

def find_max(ordered, x):
    return max(ordered, key=lambda entry: int(entry[x]))

output_directory = os.path.abspath(sys.argv[1])
split_path = output_directory.split('/')
export_path = ''
for _folder in split_path[1:]:
    if _folder != 'PROJECTS':
        export_path = export_path + "/" + str(_folder)
    else:
        export_path = export_path + "/PROJECTS/"
        break
print export_path


if sys.argv[1] == '-h':
    print 'feed me an xml from pluraleyes and I will turn it into a audio chart!'
    exit()
rough_result = []
with open(sys.argv[1], 'r') as f:
    f_lines = f.readlines()
    for line in f_lines:
        for search_term in ['name', 'start']:
            if search_term in line:
                entry = line.find('&lt;{}&gt;'.format(search_term) ) + len(search_term) + 2
                exit = line.find('&lt;/{}&gt;'.format(search_term) )
                rough_result.append(line[entry:exit])
    f.close()
duplicates = []
for i, result in enumerate(rough_result):
    if is_number(result):
        duplicates.append([rough_result[i-1], result])
ordered = ordered_set(duplicates)
max_lag = int(find_max(ordered, 1)[1])
inverted = []
for value in ordered:
    inverted.append([value[0], max_lag - int(value[1])])

first_entry = ordered[0]
first_video = first_entry[0]
csv_name = '{}.csv'.format(first_video[first_video.index('DAY'):first_video.index('.MP4')])

with open(os.path.join(export_path, csv_name), 'wb') as f:
    f.write('\nFCP Order Frame Offset\n')
    print '\nFCP Order Frame Offset'
    for camera in ordered:
        print camera
        f.write(camera[0] + ',' + str(camera[1]) + '\n')
    f.write('\nInverted Frame Offset\n')
    print '\nInverted Frame Offset'
    for camera in inverted:
        print camera
        f.write(camera[0] + ',' + str(camera[1]) + '\n')
    f.close()
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>40C82EA6-72A3-4603-AB9F-0CF6433F5B35</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>097872F8-1EA0-4D1C-91B5-BD39E722F59F</string>
				<key>UUID</key>
				<string>B54AE0E1-C193-4999-9C92-13C05C3F7E14</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>conversionLabel</key>
				<integer>0</integer>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>527.000000:778.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
